{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/rxjs/Observable.js","node_modules/rxjs/Observer.js","node_modules/rxjs/Subject.js","node_modules/rxjs/SubjectSubscription.js","node_modules/rxjs/Subscriber.js","node_modules/rxjs/Subscription.js","node_modules/rxjs/symbol/observable.js","node_modules/rxjs/symbol/rxSubscriber.js","node_modules/rxjs/util/ObjectUnsubscribedError.js","node_modules/rxjs/util/UnsubscriptionError.js","node_modules/rxjs/util/errorObject.js","node_modules/rxjs/util/isArray.js","node_modules/rxjs/util/isFunction.js","node_modules/rxjs/util/isObject.js","node_modules/rxjs/util/root.js","node_modules/rxjs/util/throwError.js","node_modules/rxjs/util/toSubscriber.js","node_modules/rxjs/util/tryCatch.js","scripts/app.controller.ts","scripts/design-region.component.ts","scripts/design-region.directive.ts","scripts/main.ts","scripts/svg/design-region-svg.ts","scripts/svg/handle-drawer.ts","scripts/svg/rect.ts"],"names":[],"mappingstvrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;;ACHA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjBA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;IAII,uBAAoB,MAAU;QAAV,WAAM,GAAN,MAAM,CAAI;IAC9B,CAAC;IACL,oBAAC;AAAD,CANA,AAMC,IAAA;AAND;kCAMC,CAAA;;;ACPA;IAAA;IAGD,CAAC;IAAD,4BAAC;AAAD,CAHC,AAGA,IAAA;AAHa,6BAAqB,wBAGlC,CAAA;;;ACHA,kCAA4B,yBAAyB,CAAC,CAAA;AAEvD;IAGI;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,EAAE;YACZ,IAAI,YAAC,KAAgB,EAAE,OAA4B,EAAE,KAAqB;gBAEtE,IAAI,GAAG,GAAG,IAAI,8BAAe,CAAC,OAAO,CAAC,CAAC;YAE3C,CAAC;SACJ,CAAC;IAEN,CAAC;IAEL,4BAAC;AAAD,CAfA,AAeC,IAAA;AAf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","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nvar root_1 = require('./util/root');\nvar observable_1 = require('./symbol/observable');\nvar toSubscriber_1 = require('./util/toSubscriber');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Registers handlers for handling emitted values, error and completions from the observable, and\n     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n     * @method subscribe\n     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled\n     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        sink.add(operator ? operator.call(sink, this) : this._subscribe(sink));\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` imple will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nexports.empty = {\n    isUnsubscribed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\nvar throwError_1 = require('./util/throwError');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n        this.observers = [];\n        this.isUnsubscribed = false;\n        this.isStopped = false;\n        this.hasErrored = false;\n        this.dispatching = false;\n        this.hasCompleted = false;\n        this.source = source;\n    }\n    Subject.prototype.lift = function (operator) {\n        var subject = new Subject(this.destination || this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.add = function (subscription) {\n        return Subscription_1.Subscription.prototype.add.call(this, subscription);\n    };\n    Subject.prototype.remove = function (subscription) {\n        Subscription_1.Subscription.prototype.remove.call(this, subscription);\n    };\n    Subject.prototype.unsubscribe = function () {\n        Subscription_1.Subscription.prototype.unsubscribe.call(this);\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            if (subscriber.isUnsubscribed) {\n                return;\n            }\n            else if (this.hasErrored) {\n                return subscriber.error(this.errorValue);\n            }\n            else if (this.hasCompleted) {\n                return subscriber.complete();\n            }\n            this.throwIfUnsubscribed();\n            var subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n            this.observers.push(subscriber);\n            return subscription;\n        }\n    };\n    Subject.prototype._unsubscribe = function () {\n        this.source = null;\n        this.isStopped = true;\n        this.observers = null;\n        this.destination = null;\n    };\n    Subject.prototype.next = function (value) {\n        this.throwIfUnsubscribed();\n        if (this.isStopped) {\n            return;\n        }\n        this.dispatching = true;\n        this._next(value);\n        this.dispatching = false;\n        if (this.hasErrored) {\n            this._error(this.errorValue);\n        }\n        else if (this.hasCompleted) {\n            this._complete();\n        }\n    };\n    Subject.prototype.error = function (err) {\n        this.throwIfUnsubscribed();\n        if (this.isStopped) {\n            return;\n        }\n        this.isStopped = true;\n        this.hasErrored = true;\n        this.errorValue = err;\n        if (this.dispatching) {\n            return;\n        }\n        this._error(err);\n    };\n    Subject.prototype.complete = function () {\n        this.throwIfUnsubscribed();\n        if (this.isStopped) {\n            return;\n        }\n        this.isStopped = true;\n        this.hasCompleted = true;\n        if (this.dispatching) {\n            return;\n        }\n        this._complete();\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new SubjectObservable(this);\n        return observable;\n    };\n    Subject.prototype._next = function (value) {\n        if (this.destination) {\n            this.destination.next(value);\n        }\n        else {\n            this._finalNext(value);\n        }\n    };\n    Subject.prototype._finalNext = function (value) {\n        var index = -1;\n        var observers = this.observers.slice(0);\n        var len = observers.length;\n        while (++index < len) {\n            observers[index].next(value);\n        }\n    };\n    Subject.prototype._error = function (err) {\n        if (this.destination) {\n            this.destination.error(err);\n        }\n        else {\n            this._finalError(err);\n        }\n    };\n    Subject.prototype._finalError = function (err) {\n        var index = -1;\n        var observers = this.observers;\n        // optimization to block our SubjectSubscriptions from\n        // splicing themselves out of the observers list one by one.\n        this.observers = null;\n        this.isUnsubscribed = true;\n        if (observers) {\n            var len = observers.length;\n            while (++index < len) {\n                observers[index].error(err);\n            }\n        }\n        this.isUnsubscribed = false;\n        this.unsubscribe();\n    };\n    Subject.prototype._complete = function () {\n        if (this.destination) {\n            this.destination.complete();\n        }\n        else {\n            this._finalComplete();\n        }\n    };\n    Subject.prototype._finalComplete = function () {\n        var index = -1;\n        var observers = this.observers;\n        // optimization to block our SubjectSubscriptions from\n        // splicing themselves out of the observers list one by one.\n        this.observers = null;\n        this.isUnsubscribed = true;\n        if (observers) {\n            var len = observers.length;\n            while (++index < len) {\n                observers[index].complete();\n            }\n        }\n        this.isUnsubscribed = false;\n        this.unsubscribe();\n    };\n    Subject.prototype.throwIfUnsubscribed = function () {\n        if (this.isUnsubscribed) {\n            throwError_1.throwError(new ObjectUnsubscribedError_1.ObjectUnsubscribedError());\n        }\n    };\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new Subscriber_1.Subscriber(this);\n    };\n    Subject.create = function (destination, source) {\n        return new Subject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectObservable = (function (_super) {\n    __extends(SubjectObservable, _super);\n    function SubjectObservable(source) {\n        _super.call(this);\n        this.source = source;\n    }\n    return SubjectObservable;\n}(Observable_1.Observable));\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, observer) {\n        _super.call(this);\n        this.subject = subject;\n        this.observer = observer;\n        this.isUnsubscribed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.isUnsubscribed) {\n            return;\n        }\n        this.isUnsubscribed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isUnsubscribed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.observer);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\nvar Observer_1 = require('./Observer');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.isUnsubscribed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parent = _parent;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parent = this._parent;\n            if (!_parent.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parent, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._error) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parent.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parent.syncErrorValue = err;\n                _parent.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._complete) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parent = this._parent;\n        this._context = null;\n        this._parent = null;\n        _parent.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.isUnsubscribed = false;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.isUnsubscribed) {\n            return;\n        }\n        this.isUnsubscribed = true;\n        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this._subscriptions = null;\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                (errors = errors || []).push(errorObject_1.errorObject.e);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(err.errors);\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `isUnsubscribed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === this) || (teardown === Subscription.EMPTY)) {\n            return;\n        }\n        var sub = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                sub = new Subscription(teardown);\n            case 'object':\n                if (sub.isUnsubscribed || typeof sub.unsubscribe !== 'function') {\n                    break;\n                }\n                else if (this.isUnsubscribed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n                }\n                break;\n            default:\n                throw new Error('Unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        return sub;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        // HACK: This might be redundant because of the logic in `add()`\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.isUnsubscribed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nif (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n        exports.$$observable = Symbol.observable;\n    }\n    else {\n        if (typeof Symbol.for === 'function') {\n            exports.$$observable = Symbol.for('observable');\n        }\n        else {\n            exports.$$observable = Symbol('observable');\n        }\n        Symbol.observable = exports.$$observable;\n    }\n}\nelse {\n    exports.$$observable = '@@observable';\n}\n//# sourceMappingURL=observable.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        _super.call(this, 'object unsubscribed');\n        this.name = 'ObjectUnsubscribedError';\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        this.name = 'UnsubscriptionError';\n        this.message = errors ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n') : '';\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nvar objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n};\nexports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\n/* tslint:disable:no-unused-variable */\nvar freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\nvar freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\nvar freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    exports.root = freeGlobal;\n}\n//# sourceMappingURL=root.js.map","\"use strict\";\nfunction throwError(e) { throw e; }\nexports.throwError = throwError;\n//# sourceMappingURL=throwError.js.map","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver && typeof nextOrObserver === 'object') {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        else if (typeof nextOrObserver[rxSubscriber_1.$$rxSubscriber] === 'function') {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map","﻿\r\nexport default class AppController {\r\n\r\n\r\n\r\n    constructor(private $scope:any) {\r\n    }\r\n}\r\n","﻿export class DesignRegionComponent {\r\n\r\n\r\n}\r\n\r\n","﻿import DesignRegionSvg from './svg/design-region-svg';\r\n\r\nexport default class DesignRegionDirective implements ng.IDirective {\r\n\r\n\r\n    constructor() {\r\n        return {\r\n            template: ``,\r\n            link(scope: ng.IScope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes) {\r\n\r\n                var svg = new DesignRegionSvg(element);\r\n\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n}","﻿import AppController from './app.controller';\r\nimport {DesignRegionComponent} from './design-region.component'; \r\nimport DesignRegionDirective from './design-region.directive'; \r\n\r\n(() => {\r\n    angular.module('svgDesignerApp', [])\r\n        .controller('appController', AppController)\r\n        .component('designregion',\r\n        {\r\n            controller: DesignRegionComponent,\r\n            template: `<design-region></design-region>`\r\n        })\r\n        .directive('designRegion', [DesignRegionDirective]);\r\n})();\r\n\r\n","﻿import HandleDrawer from './handle-drawer';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nexport default class DesignRegionSvg {\r\n\r\n    private svg: Snap.Paper;\r\n\r\n    private elementClicked = (element: Snap.Element, event: MouseEvent, onMove:Subject<any>) => {\r\n        let handles = new HandleDrawer([element], this.svg, onMove);\r\n    };\r\n\r\n    private bindEvents = (set: Snap.Set) => {\r\n        set.forEach((element: Snap.Element) => {\r\n            let originalTransorm: string;\r\n            let onMove = new Subject();\r\n            element.drag(\r\n                (dx: Number, dy: Number) => { //on move\r\n                    element.attr({\r\n                        transform: originalTransorm + (originalTransorm ? \"T\" : \"t\") + [dx, dy]\r\n                    });\r\n                    onMove.next({ dx: dx, dy: dy, originalTransorm: originalTransorm });\r\n                },\r\n                () => { //on start\r\n                    originalTransorm = element.transform().local;\r\n                },\r\n                () => { //on stop\r\n                \r\n                }\r\n            );\r\n\r\n            element.mousedown((event: MouseEvent) => { this.elementClicked(element, event, onMove) });\r\n        });\r\n    }\r\n\r\n    constructor(private svgElement: ng.IAugmentedJQuery) {\r\n        this.svg = Snap(\"#svg\");\r\n        this.bindEvents(this.svg.selectAll('[class=element]'));\r\n        this.svg.selectAll('[class=background]').forEach(function(element:Snap.Element) {\r\n            element.mousedown((event: MouseEvent) => { console.log('background') });\r\n        });\r\n        console.log(angular.element(document.querySelector('#svg')));\r\n        //angular.element(document.querySelector('#svg')).on(\"mousedown\", function() { console.log(\"click\") });\r\n    }\r\n\r\n}\r\n","﻿import Rect from './rect';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nexport default class HandleDrawer {\r\n\r\n    handles:any;\r\n\r\n    private draw = (items: Array<any>) => {\r\n\r\n        let bounds = this.getBounds(items);\r\n\r\n        let topLeft = this.paper.rect(bounds.x - 5, bounds.y - 5, 10, 10);\r\n        let bottomLeft = this.paper.rect(bounds.x - 5, bounds.y + bounds.height - 5, 10, 10);\r\n        let topRight = this.paper.rect(bounds.x + bounds.width - 5, bounds.y - 5, 10, 10);\r\n        let bottomRight = this.paper.rect(bounds.x + bounds.width - 5, bounds.y + bounds.height - 5, 10, 10);\r\n        let topMiddle = this.paper.rect((bounds.x + (bounds.width / 2)) - 5, bounds.y - 5, 10, 10);\r\n        let bottomMiddle = this.paper.rect((bounds.x + (bounds.width / 2)) - 5, bounds.y + bounds.height - 5, 10, 10);\r\n        \r\n        topLeft.mousedown((event) => { this.handleMouseDown(event, topLeft) });\r\n        bottomLeft.mousedown((event) => { this.handleMouseDown(event, bottomLeft) });\r\n        topRight.mousedown((event) => { this.handleMouseDown(event, topRight) });\r\n        bottomRight.mousedown((event) => { this.handleMouseDown(event, bottomRight) });\r\n        topMiddle.mousedown((event) => { this.handleMouseDown(event, topMiddle) });\r\n        bottomMiddle.mousedown((event) => { this.handleMouseDown(event, bottomMiddle) });\r\n\r\n        this.handles = this.paper.g(topLeft, bottomLeft, topRight, bottomRight, topMiddle, bottomMiddle);\r\n    }\r\n\r\n    private handleMouseDown = (event: MouseEvent, handle: Snap.Element) => {\r\n        \r\n    }\r\n\r\n    private onParentDrag = (data: any) => {\r\n        this.handles.attr({\r\n            transform: data.originalTransorm + (data.originalTransorm ? \"T\" : \"t\") + [data.dx, data.dy]\r\n        });\r\n    }\r\n\r\n    private getBounds = (items: Array<Snap.Element>) => {\r\n\r\n        let minX: number = undefined;\r\n        let minY: number = undefined;\r\n        let maxX: number = undefined;\r\n        let maxY: number = undefined;\r\n\r\n        _.each(items, (item: Snap.Element) => {\r\n            let bbox:Snap.BBox = item.getBBox();\r\n\r\n            if (minX === undefined || bbox.x < minX) {\r\n                minX = bbox.x;\r\n            }\r\n\r\n            if (maxX === undefined || bbox.x + bbox.width > maxX) {\r\n                maxX = bbox.x + bbox.width;\r\n            }\r\n\r\n            if (minY === undefined || bbox.y < minY) {\r\n                minY = bbox.y;\r\n            }\r\n\r\n            if (maxY === undefined || bbox.y + bbox.height > maxY) {\r\n                maxY = bbox.y + bbox.height ;\r\n            }\r\n        });\r\n\r\n        return new Rect(minX, minY, maxX - minX, maxY - minY);\r\n    }; \r\n\r\n    constructor(items: Array<Snap.Element>, private paper: Snap.Paper, private onParentMove :Subject<any>) {\r\n\r\n        this.draw(items);\r\n        onParentMove.subscribe(this.onParentDrag);\r\n\r\n    }\r\n    \r\n}","export default class Rect {\r\n\r\n    constructor(public x: number, public y: number, public width: number, public height: number) {\r\n        \r\n    }\r\n}"]}